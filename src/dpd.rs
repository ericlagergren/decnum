//! Densely Packed Decimal conversion routines.

use core::{fmt, hint};

/// A BCD's bit pattern.
#[repr(u16)]
#[derive(Copy, Clone, Debug, Eq, PartialEq)]
pub enum Pattern {
    /// All digits are small.
    AllSmall = 0x000,
    /// The right digit is large.
    RightLarge = 0x008,
    /// The middle digit is large.
    MiddleLarge = 0x080,
    /// The left digit is large.
    LeftLarge = 0x800,
    /// The right digit is small.
    RightSmall = 0x880,
    /// The middle digit is small.
    MiddleSmall = 0x808,
    /// The left digit is small.
    LeftSmall = 0x088,
    /// All digits are large.
    AllLarge = 0x888,
}

impl fmt::Display for Pattern {
    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {
        use Pattern::*;
        match self {
            AllSmall => write!(f, "AllSmall"),
            RightLarge => write!(f, "RightLarge"),
            MiddleLarge => write!(f, "MiddleLarge"),
            LeftLarge => write!(f, "LeftLarge"),
            RightSmall => write!(f, "RightSmall"),
            MiddleSmall => write!(f, "MiddleSmall"),
            LeftSmall => write!(f, "LeftSmall"),
            AllLarge => write!(f, "AllLarge"),
        }
    }
}

/// Classifies a BCD for packing into a DPD.
pub const fn classify_bcd(bcd: u16) -> Pattern {
    use Pattern::*;
    match bcd & 0x888 {
        0x000 => AllSmall,
        0x008 => RightLarge,
        0x080 => MiddleLarge,
        0x800 => LeftLarge,
        0x880 => RightSmall,
        0x808 => MiddleSmall,
        0x088 => LeftSmall,
        0x888 => AllLarge,
        // SAFETY: Given the bits we've set, these are the only
        // possible results.
        _ => unsafe { hint::unreachable_unchecked() },
    }
}

/// Classifies a DPD for unpacking into a BCD.
pub const fn classify_dpd(dpd: u16) -> Pattern {
    use Pattern::*;

    // Match bit `v`.
    if dpd & 0x8 == 0 {
        return AllSmall;
    }

    // Match bits `vwx`.
    match dpd & 0xe {
        0x8 => return RightLarge,
        0xa => return MiddleLarge,
        0xc => return LeftLarge,
        _ => {}
    }

    // Match bits `st`.
    match dpd & 0x60 {
        0x00 => RightSmall,
        0x20 => MiddleSmall,
        0x40 => LeftSmall,
        0x60 => AllLarge,
        // SAFETY: Given the bits we've set, these are the only
        // possible results.
        _ => unsafe { hint::unreachable_unchecked() },
    }
}

/// Packs a three-digit BCD into a DPD.
pub const fn pack(mut bcd: u16) -> u16 {
    // (abcd)(efgh)(ijkm) becomes (pqr)(stu)(v)(wxy)

    // | aei | pqr stu v wxy   comments
    // | --- | ------------- | ----------------------|
    // | 000 | bcd fgh 0 jkm | All digits are small  |
    // | 001 | bcd fgh 1 00m | Right digit is large  |
    // | 010 | bcd jkh 1 01m | Middle digit is large |
    // | 100 | jkd fgh 1 10m | Left digit is large   |
    // | 110 | jkd 00h 1 11m | Right digit is small  |
    // | 101 | fgd 01h 1 11m | Middle digit is small |
    // | 011 | bcd 10h 1 11m | Left digit is small   |
    // | 111 | 00d 11h 1 11m | All digits are large  |

    // BCDs only use the lower 12 bits.
    bcd &= 0x0fff;

    use Pattern::*;
    match classify_bcd(bcd) {
        AllSmall => {
            // .... abcd efgh ijkm
            // .... ..bc dfgh 0jkm
            ((bcd & 0x700) >> 1) | (bcd & 0x77)
        }
        RightLarge => {
            // .... abcd efgh ijkm
            // .... ..bc dfgh 100m
            ((bcd & 0x700) >> 1) | 0x8 | (bcd & 0x71)
        }
        MiddleLarge => {
            // .... abcd efgh ijkm
            // .... ..bc djkh 101m
            ((bcd & 0x700) >> 1) | ((bcd & 0x6) << 4) | 0xa | (bcd & 0x11)
        }
        LeftLarge => {
            // .... abcd efgh ijkm
            // .... ..jk dfgh 110m
            ((bcd & 0x6) << 7) | ((bcd & 0x100) >> 1) | (bcd & 0x71) | 0xc
        }
        RightSmall => {
            // .... abcd efgh ijkm
            // .... ..jk d00h 111m
            ((bcd & 0x6) << 7) | ((bcd & 0x100) >> 1) | (bcd & 0x11) | 0xe
        }
        MiddleSmall => {
            // .... abcd efgh ijkm
            // .... ..fg d01h 111m
            ((bcd & 0x60) << 3) | ((bcd & 0x100) >> 1) | (bcd & 0x11) | 0x2e
        }
        LeftSmall => {
            // .... abcd efgh ijkm
            // .... ..bc d10h 111m
            ((bcd & 0x700) >> 1) | (bcd & 0x11) | 0x4e
        }
        AllLarge => {
            // .... abcd efgh ijkm
            // .... ..00 d11h 111m
            ((bcd & 0x100) >> 1) | (bcd & 0x11) | 0x6e
        }
    }
}

/// Packs a BCD into a DPD.
pub const fn pack_u32(bcd: u32) -> u32 {
    // [0000 .... ....] [.... .... ....] [.... .... ....]
    //        hi              mid               lo
    let lo = pack((bcd & 0xfff) as u16) as u32;
    let mid = pack(((bcd >> 12) & 0xfff) as u16) as u32;
    let hi = pack(((bcd >> 24) & 0xfff) as u16) as u32;
    (hi << 20) | (mid << 10) | lo
}

/// Unpacks a DPD into a three-digit BCD.
pub const fn unpack(mut dpd: u16) -> u16 {
    // (pqr)(stu)(v)(wxy) becomes (abcd)(efgh)(ijkm)

    // DPDs only use the lower 10 bits.
    dpd &= 0x3ff;

    // | vwxst | abcd efgh ikjm |
    // | ----- | -------------- |
    // | 0.... | 0pqr 0stu 0wxy |
    // | 100.. | 0pqr 0stu 100y |
    // | 101.. | 0pqr 100u 0sty |
    // | 110.. | 100r 0stu 0pqy |
    // | 11100 | 100r 100u 0pqy |
    // | 11101 | 100r 0pqu 100y |
    // | 11110 | 0pqr 100u 100y |
    // | 11111 | 100r 100u 100y |

    use Pattern::*;
    match classify_dpd(dpd) {
        AllSmall => {
            // .... ..pq rstu vwxy
            // .... 0pqr 0stu 0wxy
            ((dpd & 0x380) << 1) | (dpd & 0x077)
        }
        RightLarge => {
            // .... ..pq rstu vwxy
            // .... 0pqr 0stu 100y
            ((dpd & 0x380) << 1) | (dpd & 0x71) | 0x8
        }
        MiddleLarge => {
            // .... ..pq rstu vwxy
            // .... 0pqr 100u 0sty
            ((dpd & 0x380) << 1) | ((dpd & 0x60) >> 4) | 0x80 | (dpd & 0x11)
        }
        LeftLarge => {
            // .... ..pq rstu vwxy
            // .... 100r 0stu 0pqy
            ((dpd & 0x80) << 1) | (dpd & 0x71) | ((dpd & 0x300) >> 7) | 0x800
        }
        RightSmall => {
            // .... ..pq rstu vwxy
            // .... 100r 100u 0pqy
            ((dpd & 0x80) << 1) | ((dpd & 0x300) >> 7) | (dpd & 0x11) | 0x880
        }
        MiddleSmall => {
            // .... ..pq rstu vwxy
            // .... 100r 0pqu 100y
            ((dpd & 0x80) << 1) | ((dpd & 0x300) >> 3) | (dpd & 0x11) | 0x808
        }
        LeftSmall => {
            // .... ..pq rstu vwxy
            // .... 0pqr 100u 100y
            ((dpd & 0x380) << 1) | (dpd & 0x11) | 0x88
        }
        AllLarge => {
            // .... ..pq rstu vwxy
            // .... 100r 100u 100y
            ((dpd & 0x80) << 1) | (dpd & 0x11) | 0x888
        }
    }
}

#[cfg(test)]
mod tests {
    use core::fmt;

    use super::*;
    use crate::bcd;

    struct Dpd(u16);
    impl fmt::Display for Dpd {
        fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {
            let pqr = (self.0 >> 7) & 0x7;
            let stu = (self.0 >> 4) & 0x7;
            let v = (self.0 >> 3) & 0x1;
            let wxy = self.0 & 0x7;
            write!(f, "({pqr:03b})({stu:03b})({v:01b})({wxy:03b})")
        }
    }
    struct Bcd(u16);
    impl fmt::Display for Bcd {
        fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {
            let abcd = (self.0 >> 8) & 0xf;
            let efgh = (self.0 >> 4) & 0xf;
            let ijkm = self.0 & 0xf;
            write!(f, "({abcd:04b})({efgh:04b})({ijkm:04b})")
        }
    }

    #[test]
    fn test_pack_unpack() {
        use Pattern::*;
        let tests = [
            (5, 0b000_000_0_101, AllSmall),
            (9, 0b000_000_1_001, RightLarge),
            (55, 0b000_101_0_101, AllSmall),
            (79, 0b000_111_1_001, RightLarge),
            (80, 0b000_000_1_010, MiddleLarge),
            (99, 0b000_101_1_111, LeftSmall),
            (555, 0b101_101_0_101, AllSmall),
            (999, 0b001_111_1_111, AllLarge),
        ];
        for (i, (bin, dpd, pattern)) in tests.into_iter().enumerate() {
            let bcd = bcd::from_u16(bin);

            // Check the BCD/DPD classification.
            assert_eq!(classify_bcd(bcd), pattern, "#{i}");
            assert_eq!(classify_dpd(dpd), pattern, "#{i}");

            let got = pack(bcd);
            assert_eq!(got, dpd, "#{i} ({bin}): {} != {}", Dpd(got), Dpd(dpd));

            let got = unpack(got);
            assert_eq!(got, bcd, "#{i} ({bin}): {} != {}", Bcd(got), Bcd(bcd));
        }
    }

    #[test]
    fn test_pack_unpack_exhaustive() {
        let tests = [
            (000, 0b0000000000, 0b000000000000),
            (001, 0b0000000001, 0b000000000001),
            (002, 0b0000000010, 0b000000000010),
            (003, 0b0000000011, 0b000000000011),
            (004, 0b0000000100, 0b000000000100),
            (005, 0b0000000101, 0b000000000101),
            (006, 0b0000000110, 0b000000000110),
            (007, 0b0000000111, 0b000000000111),
            (008, 0b0000001000, 0b000000001000),
            (009, 0b0000001001, 0b000000001001),
            (010, 0b0000010000, 0b000000010000),
            (011, 0b0000010001, 0b000000010001),
            (012, 0b0000010010, 0b000000010010),
            (013, 0b0000010011, 0b000000010011),
            (014, 0b0000010100, 0b000000010100),
            (015, 0b0000010101, 0b000000010101),
            (016, 0b0000010110, 0b000000010110),
            (017, 0b0000010111, 0b000000010111),
            (018, 0b0000011000, 0b000000011000),
            (019, 0b0000011001, 0b000000011001),
            (020, 0b0000100000, 0b000000100000),
            (021, 0b0000100001, 0b000000100001),
            (022, 0b0000100010, 0b000000100010),
            (023, 0b0000100011, 0b000000100011),
            (024, 0b0000100100, 0b000000100100),
            (025, 0b0000100101, 0b000000100101),
            (026, 0b0000100110, 0b000000100110),
            (027, 0b0000100111, 0b000000100111),
            (028, 0b0000101000, 0b000000101000),
            (029, 0b0000101001, 0b000000101001),
            (030, 0b0000110000, 0b000000110000),
            (031, 0b0000110001, 0b000000110001),
            (032, 0b0000110010, 0b000000110010),
            (033, 0b0000110011, 0b000000110011),
            (034, 0b0000110100, 0b000000110100),
            (035, 0b0000110101, 0b000000110101),
            (036, 0b0000110110, 0b000000110110),
            (037, 0b0000110111, 0b000000110111),
            (038, 0b0000111000, 0b000000111000),
            (039, 0b0000111001, 0b000000111001),
            (040, 0b0001000000, 0b000001000000),
            (041, 0b0001000001, 0b000001000001),
            (042, 0b0001000010, 0b000001000010),
            (043, 0b0001000011, 0b000001000011),
            (044, 0b0001000100, 0b000001000100),
            (045, 0b0001000101, 0b000001000101),
            (046, 0b0001000110, 0b000001000110),
            (047, 0b0001000111, 0b000001000111),
            (048, 0b0001001000, 0b000001001000),
            (049, 0b0001001001, 0b000001001001),
            (050, 0b0001010000, 0b000001010000),
            (051, 0b0001010001, 0b000001010001),
            (052, 0b0001010010, 0b000001010010),
            (053, 0b0001010011, 0b000001010011),
            (054, 0b0001010100, 0b000001010100),
            (055, 0b0001010101, 0b000001010101),
            (056, 0b0001010110, 0b000001010110),
            (057, 0b0001010111, 0b000001010111),
            (058, 0b0001011000, 0b000001011000),
            (059, 0b0001011001, 0b000001011001),
            (060, 0b0001100000, 0b000001100000),
            (061, 0b0001100001, 0b000001100001),
            (062, 0b0001100010, 0b000001100010),
            (063, 0b0001100011, 0b000001100011),
            (064, 0b0001100100, 0b000001100100),
            (065, 0b0001100101, 0b000001100101),
            (066, 0b0001100110, 0b000001100110),
            (067, 0b0001100111, 0b000001100111),
            (068, 0b0001101000, 0b000001101000),
            (069, 0b0001101001, 0b000001101001),
            (070, 0b0001110000, 0b000001110000),
            (071, 0b0001110001, 0b000001110001),
            (072, 0b0001110010, 0b000001110010),
            (073, 0b0001110011, 0b000001110011),
            (074, 0b0001110100, 0b000001110100),
            (075, 0b0001110101, 0b000001110101),
            (076, 0b0001110110, 0b000001110110),
            (077, 0b0001110111, 0b000001110111),
            (078, 0b0001111000, 0b000001111000),
            (079, 0b0001111001, 0b000001111001),
            (080, 0b0000001010, 0b000010000000),
            (081, 0b0000001011, 0b000010000001),
            (082, 0b0000101010, 0b000010000010),
            (083, 0b0000101011, 0b000010000011),
            (084, 0b0001001010, 0b000010000100),
            (085, 0b0001001011, 0b000010000101),
            (086, 0b0001101010, 0b000010000110),
            (087, 0b0001101011, 0b000010000111),
            (088, 0b0001001110, 0b000010001000),
            (089, 0b0001001111, 0b000010001001),
            (090, 0b0000011010, 0b000010010000),
            (091, 0b0000011011, 0b000010010001),
            (092, 0b0000111010, 0b000010010010),
            (093, 0b0000111011, 0b000010010011),
            (094, 0b0001011010, 0b000010010100),
            (095, 0b0001011011, 0b000010010101),
            (096, 0b0001111010, 0b000010010110),
            (097, 0b0001111011, 0b000010010111),
            (098, 0b0001011110, 0b000010011000),
            (099, 0b0001011111, 0b000010011001),
            (100, 0b0010000000, 0b000100000000),
            (101, 0b0010000001, 0b000100000001),
            (102, 0b0010000010, 0b000100000010),
            (103, 0b0010000011, 0b000100000011),
            (104, 0b0010000100, 0b000100000100),
            (105, 0b0010000101, 0b000100000101),
            (106, 0b0010000110, 0b000100000110),
            (107, 0b0010000111, 0b000100000111),
            (108, 0b0010001000, 0b000100001000),
            (109, 0b0010001001, 0b000100001001),
            (110, 0b0010010000, 0b000100010000),
            (111, 0b0010010001, 0b000100010001),
            (112, 0b0010010010, 0b000100010010),
            (113, 0b0010010011, 0b000100010011),
            (114, 0b0010010100, 0b000100010100),
            (115, 0b0010010101, 0b000100010101),
            (116, 0b0010010110, 0b000100010110),
            (117, 0b0010010111, 0b000100010111),
            (118, 0b0010011000, 0b000100011000),
            (119, 0b0010011001, 0b000100011001),
            (120, 0b0010100000, 0b000100100000),
            (121, 0b0010100001, 0b000100100001),
            (122, 0b0010100010, 0b000100100010),
            (123, 0b0010100011, 0b000100100011),
            (124, 0b0010100100, 0b000100100100),
            (125, 0b0010100101, 0b000100100101),
            (126, 0b0010100110, 0b000100100110),
            (127, 0b0010100111, 0b000100100111),
            (128, 0b0010101000, 0b000100101000),
            (129, 0b0010101001, 0b000100101001),
            (130, 0b0010110000, 0b000100110000),
            (131, 0b0010110001, 0b000100110001),
            (132, 0b0010110010, 0b000100110010),
            (133, 0b0010110011, 0b000100110011),
            (134, 0b0010110100, 0b000100110100),
            (135, 0b0010110101, 0b000100110101),
            (136, 0b0010110110, 0b000100110110),
            (137, 0b0010110111, 0b000100110111),
            (138, 0b0010111000, 0b000100111000),
            (139, 0b0010111001, 0b000100111001),
            (140, 0b0011000000, 0b000101000000),
            (141, 0b0011000001, 0b000101000001),
            (142, 0b0011000010, 0b000101000010),
            (143, 0b0011000011, 0b000101000011),
            (144, 0b0011000100, 0b000101000100),
            (145, 0b0011000101, 0b000101000101),
            (146, 0b0011000110, 0b000101000110),
            (147, 0b0011000111, 0b000101000111),
            (148, 0b0011001000, 0b000101001000),
            (149, 0b0011001001, 0b000101001001),
            (150, 0b0011010000, 0b000101010000),
            (151, 0b0011010001, 0b000101010001),
            (152, 0b0011010010, 0b000101010010),
            (153, 0b0011010011, 0b000101010011),
            (154, 0b0011010100, 0b000101010100),
            (155, 0b0011010101, 0b000101010101),
            (156, 0b0011010110, 0b000101010110),
            (157, 0b0011010111, 0b000101010111),
            (158, 0b0011011000, 0b000101011000),
            (159, 0b0011011001, 0b000101011001),
            (160, 0b0011100000, 0b000101100000),
            (161, 0b0011100001, 0b000101100001),
            (162, 0b0011100010, 0b000101100010),
            (163, 0b0011100011, 0b000101100011),
            (164, 0b0011100100, 0b000101100100),
            (165, 0b0011100101, 0b000101100101),
            (166, 0b0011100110, 0b000101100110),
            (167, 0b0011100111, 0b000101100111),
            (168, 0b0011101000, 0b000101101000),
            (169, 0b0011101001, 0b000101101001),
            (170, 0b0011110000, 0b000101110000),
            (171, 0b0011110001, 0b000101110001),
            (172, 0b0011110010, 0b000101110010),
            (173, 0b0011110011, 0b000101110011),
            (174, 0b0011110100, 0b000101110100),
            (175, 0b0011110101, 0b000101110101),
            (176, 0b0011110110, 0b000101110110),
            (177, 0b0011110111, 0b000101110111),
            (178, 0b0011111000, 0b000101111000),
            (179, 0b0011111001, 0b000101111001),
            (180, 0b0010001010, 0b000110000000),
            (181, 0b0010001011, 0b000110000001),
            (182, 0b0010101010, 0b000110000010),
            (183, 0b0010101011, 0b000110000011),
            (184, 0b0011001010, 0b000110000100),
            (185, 0b0011001011, 0b000110000101),
            (186, 0b0011101010, 0b000110000110),
            (187, 0b0011101011, 0b000110000111),
            (188, 0b0011001110, 0b000110001000),
            (189, 0b0011001111, 0b000110001001),
            (190, 0b0010011010, 0b000110010000),
            (191, 0b0010011011, 0b000110010001),
            (192, 0b0010111010, 0b000110010010),
            (193, 0b0010111011, 0b000110010011),
            (194, 0b0011011010, 0b000110010100),
            (195, 0b0011011011, 0b000110010101),
            (196, 0b0011111010, 0b000110010110),
            (197, 0b0011111011, 0b000110010111),
            (198, 0b0011011110, 0b000110011000),
            (199, 0b0011011111, 0b000110011001),
            (200, 0b0100000000, 0b001000000000),
            (201, 0b0100000001, 0b001000000001),
            (202, 0b0100000010, 0b001000000010),
            (203, 0b0100000011, 0b001000000011),
            (204, 0b0100000100, 0b001000000100),
            (205, 0b0100000101, 0b001000000101),
            (206, 0b0100000110, 0b001000000110),
            (207, 0b0100000111, 0b001000000111),
            (208, 0b0100001000, 0b001000001000),
            (209, 0b0100001001, 0b001000001001),
            (210, 0b0100010000, 0b001000010000),
            (211, 0b0100010001, 0b001000010001),
            (212, 0b0100010010, 0b001000010010),
            (213, 0b0100010011, 0b001000010011),
            (214, 0b0100010100, 0b001000010100),
            (215, 0b0100010101, 0b001000010101),
            (216, 0b0100010110, 0b001000010110),
            (217, 0b0100010111, 0b001000010111),
            (218, 0b0100011000, 0b001000011000),
            (219, 0b0100011001, 0b001000011001),
            (220, 0b0100100000, 0b001000100000),
            (221, 0b0100100001, 0b001000100001),
            (222, 0b0100100010, 0b001000100010),
            (223, 0b0100100011, 0b001000100011),
            (224, 0b0100100100, 0b001000100100),
            (225, 0b0100100101, 0b001000100101),
            (226, 0b0100100110, 0b001000100110),
            (227, 0b0100100111, 0b001000100111),
            (228, 0b0100101000, 0b001000101000),
            (229, 0b0100101001, 0b001000101001),
            (230, 0b0100110000, 0b001000110000),
            (231, 0b0100110001, 0b001000110001),
            (232, 0b0100110010, 0b001000110010),
            (233, 0b0100110011, 0b001000110011),
            (234, 0b0100110100, 0b001000110100),
            (235, 0b0100110101, 0b001000110101),
            (236, 0b0100110110, 0b001000110110),
            (237, 0b0100110111, 0b001000110111),
            (238, 0b0100111000, 0b001000111000),
            (239, 0b0100111001, 0b001000111001),
            (240, 0b0101000000, 0b001001000000),
            (241, 0b0101000001, 0b001001000001),
            (242, 0b0101000010, 0b001001000010),
            (243, 0b0101000011, 0b001001000011),
            (244, 0b0101000100, 0b001001000100),
            (245, 0b0101000101, 0b001001000101),
            (246, 0b0101000110, 0b001001000110),
            (247, 0b0101000111, 0b001001000111),
            (248, 0b0101001000, 0b001001001000),
            (249, 0b0101001001, 0b001001001001),
            (250, 0b0101010000, 0b001001010000),
            (251, 0b0101010001, 0b001001010001),
            (252, 0b0101010010, 0b001001010010),
            (253, 0b0101010011, 0b001001010011),
            (254, 0b0101010100, 0b001001010100),
            (255, 0b0101010101, 0b001001010101),
            (256, 0b0101010110, 0b001001010110),
            (257, 0b0101010111, 0b001001010111),
            (258, 0b0101011000, 0b001001011000),
            (259, 0b0101011001, 0b001001011001),
            (260, 0b0101100000, 0b001001100000),
            (261, 0b0101100001, 0b001001100001),
            (262, 0b0101100010, 0b001001100010),
            (263, 0b0101100011, 0b001001100011),
            (264, 0b0101100100, 0b001001100100),
            (265, 0b0101100101, 0b001001100101),
            (266, 0b0101100110, 0b001001100110),
            (267, 0b0101100111, 0b001001100111),
            (268, 0b0101101000, 0b001001101000),
            (269, 0b0101101001, 0b001001101001),
            (270, 0b0101110000, 0b001001110000),
            (271, 0b0101110001, 0b001001110001),
            (272, 0b0101110010, 0b001001110010),
            (273, 0b0101110011, 0b001001110011),
            (274, 0b0101110100, 0b001001110100),
            (275, 0b0101110101, 0b001001110101),
            (276, 0b0101110110, 0b001001110110),
            (277, 0b0101110111, 0b001001110111),
            (278, 0b0101111000, 0b001001111000),
            (279, 0b0101111001, 0b001001111001),
            (280, 0b0100001010, 0b001010000000),
            (281, 0b0100001011, 0b001010000001),
            (282, 0b0100101010, 0b001010000010),
            (283, 0b0100101011, 0b001010000011),
            (284, 0b0101001010, 0b001010000100),
            (285, 0b0101001011, 0b001010000101),
            (286, 0b0101101010, 0b001010000110),
            (287, 0b0101101011, 0b001010000111),
            (288, 0b0101001110, 0b001010001000),
            (289, 0b0101001111, 0b001010001001),
            (290, 0b0100011010, 0b001010010000),
            (291, 0b0100011011, 0b001010010001),
            (292, 0b0100111010, 0b001010010010),
            (293, 0b0100111011, 0b001010010011),
            (294, 0b0101011010, 0b001010010100),
            (295, 0b0101011011, 0b001010010101),
            (296, 0b0101111010, 0b001010010110),
            (297, 0b0101111011, 0b001010010111),
            (298, 0b0101011110, 0b001010011000),
            (299, 0b0101011111, 0b001010011001),
            (300, 0b0110000000, 0b001100000000),
            (301, 0b0110000001, 0b001100000001),
            (302, 0b0110000010, 0b001100000010),
            (303, 0b0110000011, 0b001100000011),
            (304, 0b0110000100, 0b001100000100),
            (305, 0b0110000101, 0b001100000101),
            (306, 0b0110000110, 0b001100000110),
            (307, 0b0110000111, 0b001100000111),
            (308, 0b0110001000, 0b001100001000),
            (309, 0b0110001001, 0b001100001001),
            (310, 0b0110010000, 0b001100010000),
            (311, 0b0110010001, 0b001100010001),
            (312, 0b0110010010, 0b001100010010),
            (313, 0b0110010011, 0b001100010011),
            (314, 0b0110010100, 0b001100010100),
            (315, 0b0110010101, 0b001100010101),
            (316, 0b0110010110, 0b001100010110),
            (317, 0b0110010111, 0b001100010111),
            (318, 0b0110011000, 0b001100011000),
            (319, 0b0110011001, 0b001100011001),
            (320, 0b0110100000, 0b001100100000),
            (321, 0b0110100001, 0b001100100001),
            (322, 0b0110100010, 0b001100100010),
            (323, 0b0110100011, 0b001100100011),
            (324, 0b0110100100, 0b001100100100),
            (325, 0b0110100101, 0b001100100101),
            (326, 0b0110100110, 0b001100100110),
            (327, 0b0110100111, 0b001100100111),
            (328, 0b0110101000, 0b001100101000),
            (329, 0b0110101001, 0b001100101001),
            (330, 0b0110110000, 0b001100110000),
            (331, 0b0110110001, 0b001100110001),
            (332, 0b0110110010, 0b001100110010),
            (333, 0b0110110011, 0b001100110011),
            (334, 0b0110110100, 0b001100110100),
            (335, 0b0110110101, 0b001100110101),
            (336, 0b0110110110, 0b001100110110),
            (337, 0b0110110111, 0b001100110111),
            (338, 0b0110111000, 0b001100111000),
            (339, 0b0110111001, 0b001100111001),
            (340, 0b0111000000, 0b001101000000),
            (341, 0b0111000001, 0b001101000001),
            (342, 0b0111000010, 0b001101000010),
            (343, 0b0111000011, 0b001101000011),
            (344, 0b0111000100, 0b001101000100),
            (345, 0b0111000101, 0b001101000101),
            (346, 0b0111000110, 0b001101000110),
            (347, 0b0111000111, 0b001101000111),
            (348, 0b0111001000, 0b001101001000),
            (349, 0b0111001001, 0b001101001001),
            (350, 0b0111010000, 0b001101010000),
            (351, 0b0111010001, 0b001101010001),
            (352, 0b0111010010, 0b001101010010),
            (353, 0b0111010011, 0b001101010011),
            (354, 0b0111010100, 0b001101010100),
            (355, 0b0111010101, 0b001101010101),
            (356, 0b0111010110, 0b001101010110),
            (357, 0b0111010111, 0b001101010111),
            (358, 0b0111011000, 0b001101011000),
            (359, 0b0111011001, 0b001101011001),
            (360, 0b0111100000, 0b001101100000),
            (361, 0b0111100001, 0b001101100001),
            (362, 0b0111100010, 0b001101100010),
            (363, 0b0111100011, 0b001101100011),
            (364, 0b0111100100, 0b001101100100),
            (365, 0b0111100101, 0b001101100101),
            (366, 0b0111100110, 0b001101100110),
            (367, 0b0111100111, 0b001101100111),
            (368, 0b0111101000, 0b001101101000),
            (369, 0b0111101001, 0b001101101001),
            (370, 0b0111110000, 0b001101110000),
            (371, 0b0111110001, 0b001101110001),
            (372, 0b0111110010, 0b001101110010),
            (373, 0b0111110011, 0b001101110011),
            (374, 0b0111110100, 0b001101110100),
            (375, 0b0111110101, 0b001101110101),
            (376, 0b0111110110, 0b001101110110),
            (377, 0b0111110111, 0b001101110111),
            (378, 0b0111111000, 0b001101111000),
            (379, 0b0111111001, 0b001101111001),
            (380, 0b0110001010, 0b001110000000),
            (381, 0b0110001011, 0b001110000001),
            (382, 0b0110101010, 0b001110000010),
            (383, 0b0110101011, 0b001110000011),
            (384, 0b0111001010, 0b001110000100),
            (385, 0b0111001011, 0b001110000101),
            (386, 0b0111101010, 0b001110000110),
            (387, 0b0111101011, 0b001110000111),
            (388, 0b0111001110, 0b001110001000),
            (389, 0b0111001111, 0b001110001001),
            (390, 0b0110011010, 0b001110010000),
            (391, 0b0110011011, 0b001110010001),
            (392, 0b0110111010, 0b001110010010),
            (393, 0b0110111011, 0b001110010011),
            (394, 0b0111011010, 0b001110010100),
            (395, 0b0111011011, 0b001110010101),
            (396, 0b0111111010, 0b001110010110),
            (397, 0b0111111011, 0b001110010111),
            (398, 0b0111011110, 0b001110011000),
            (399, 0b0111011111, 0b001110011001),
            (400, 0b1000000000, 0b010000000000),
            (401, 0b1000000001, 0b010000000001),
            (402, 0b1000000010, 0b010000000010),
            (403, 0b1000000011, 0b010000000011),
            (404, 0b1000000100, 0b010000000100),
            (405, 0b1000000101, 0b010000000101),
            (406, 0b1000000110, 0b010000000110),
            (407, 0b1000000111, 0b010000000111),
            (408, 0b1000001000, 0b010000001000),
            (409, 0b1000001001, 0b010000001001),
            (410, 0b1000010000, 0b010000010000),
            (411, 0b1000010001, 0b010000010001),
            (412, 0b1000010010, 0b010000010010),
            (413, 0b1000010011, 0b010000010011),
            (414, 0b1000010100, 0b010000010100),
            (415, 0b1000010101, 0b010000010101),
            (416, 0b1000010110, 0b010000010110),
            (417, 0b1000010111, 0b010000010111),
            (418, 0b1000011000, 0b010000011000),
            (419, 0b1000011001, 0b010000011001),
            (420, 0b1000100000, 0b010000100000),
            (421, 0b1000100001, 0b010000100001),
            (422, 0b1000100010, 0b010000100010),
            (423, 0b1000100011, 0b010000100011),
            (424, 0b1000100100, 0b010000100100),
            (425, 0b1000100101, 0b010000100101),
            (426, 0b1000100110, 0b010000100110),
            (427, 0b1000100111, 0b010000100111),
            (428, 0b1000101000, 0b010000101000),
            (429, 0b1000101001, 0b010000101001),
            (430, 0b1000110000, 0b010000110000),
            (431, 0b1000110001, 0b010000110001),
            (432, 0b1000110010, 0b010000110010),
            (433, 0b1000110011, 0b010000110011),
            (434, 0b1000110100, 0b010000110100),
            (435, 0b1000110101, 0b010000110101),
            (436, 0b1000110110, 0b010000110110),
            (437, 0b1000110111, 0b010000110111),
            (438, 0b1000111000, 0b010000111000),
            (439, 0b1000111001, 0b010000111001),
            (440, 0b1001000000, 0b010001000000),
            (441, 0b1001000001, 0b010001000001),
            (442, 0b1001000010, 0b010001000010),
            (443, 0b1001000011, 0b010001000011),
            (444, 0b1001000100, 0b010001000100),
            (445, 0b1001000101, 0b010001000101),
            (446, 0b1001000110, 0b010001000110),
            (447, 0b1001000111, 0b010001000111),
            (448, 0b1001001000, 0b010001001000),
            (449, 0b1001001001, 0b010001001001),
            (450, 0b1001010000, 0b010001010000),
            (451, 0b1001010001, 0b010001010001),
            (452, 0b1001010010, 0b010001010010),
            (453, 0b1001010011, 0b010001010011),
            (454, 0b1001010100, 0b010001010100),
            (455, 0b1001010101, 0b010001010101),
            (456, 0b1001010110, 0b010001010110),
            (457, 0b1001010111, 0b010001010111),
            (458, 0b1001011000, 0b010001011000),
            (459, 0b1001011001, 0b010001011001),
            (460, 0b1001100000, 0b010001100000),
            (461, 0b1001100001, 0b010001100001),
            (462, 0b1001100010, 0b010001100010),
            (463, 0b1001100011, 0b010001100011),
            (464, 0b1001100100, 0b010001100100),
            (465, 0b1001100101, 0b010001100101),
            (466, 0b1001100110, 0b010001100110),
            (467, 0b1001100111, 0b010001100111),
            (468, 0b1001101000, 0b010001101000),
            (469, 0b1001101001, 0b010001101001),
            (470, 0b1001110000, 0b010001110000),
            (471, 0b1001110001, 0b010001110001),
            (472, 0b1001110010, 0b010001110010),
            (473, 0b1001110011, 0b010001110011),
            (474, 0b1001110100, 0b010001110100),
            (475, 0b1001110101, 0b010001110101),
            (476, 0b1001110110, 0b010001110110),
            (477, 0b1001110111, 0b010001110111),
            (478, 0b1001111000, 0b010001111000),
            (479, 0b1001111001, 0b010001111001),
            (480, 0b1000001010, 0b010010000000),
            (481, 0b1000001011, 0b010010000001),
            (482, 0b1000101010, 0b010010000010),
            (483, 0b1000101011, 0b010010000011),
            (484, 0b1001001010, 0b010010000100),
            (485, 0b1001001011, 0b010010000101),
            (486, 0b1001101010, 0b010010000110),
            (487, 0b1001101011, 0b010010000111),
            (488, 0b1001001110, 0b010010001000),
            (489, 0b1001001111, 0b010010001001),
            (490, 0b1000011010, 0b010010010000),
            (491, 0b1000011011, 0b010010010001),
            (492, 0b1000111010, 0b010010010010),
            (493, 0b1000111011, 0b010010010011),
            (494, 0b1001011010, 0b010010010100),
            (495, 0b1001011011, 0b010010010101),
            (496, 0b1001111010, 0b010010010110),
            (497, 0b1001111011, 0b010010010111),
            (498, 0b1001011110, 0b010010011000),
            (499, 0b1001011111, 0b010010011001),
            (500, 0b1010000000, 0b010100000000),
            (501, 0b1010000001, 0b010100000001),
            (502, 0b1010000010, 0b010100000010),
            (503, 0b1010000011, 0b010100000011),
            (504, 0b1010000100, 0b010100000100),
            (505, 0b1010000101, 0b010100000101),
            (506, 0b1010000110, 0b010100000110),
            (507, 0b1010000111, 0b010100000111),
            (508, 0b1010001000, 0b010100001000),
            (509, 0b1010001001, 0b010100001001),
            (510, 0b1010010000, 0b010100010000),
            (511, 0b1010010001, 0b010100010001),
            (512, 0b1010010010, 0b010100010010),
            (513, 0b1010010011, 0b010100010011),
            (514, 0b1010010100, 0b010100010100),
            (515, 0b1010010101, 0b010100010101),
            (516, 0b1010010110, 0b010100010110),
            (517, 0b1010010111, 0b010100010111),
            (518, 0b1010011000, 0b010100011000),
            (519, 0b1010011001, 0b010100011001),
            (520, 0b1010100000, 0b010100100000),
            (521, 0b1010100001, 0b010100100001),
            (522, 0b1010100010, 0b010100100010),
            (523, 0b1010100011, 0b010100100011),
            (524, 0b1010100100, 0b010100100100),
            (525, 0b1010100101, 0b010100100101),
            (526, 0b1010100110, 0b010100100110),
            (527, 0b1010100111, 0b010100100111),
            (528, 0b1010101000, 0b010100101000),
            (529, 0b1010101001, 0b010100101001),
            (530, 0b1010110000, 0b010100110000),
            (531, 0b1010110001, 0b010100110001),
            (532, 0b1010110010, 0b010100110010),
            (533, 0b1010110011, 0b010100110011),
            (534, 0b1010110100, 0b010100110100),
            (535, 0b1010110101, 0b010100110101),
            (536, 0b1010110110, 0b010100110110),
            (537, 0b1010110111, 0b010100110111),
            (538, 0b1010111000, 0b010100111000),
            (539, 0b1010111001, 0b010100111001),
            (540, 0b1011000000, 0b010101000000),
            (541, 0b1011000001, 0b010101000001),
            (542, 0b1011000010, 0b010101000010),
            (543, 0b1011000011, 0b010101000011),
            (544, 0b1011000100, 0b010101000100),
            (545, 0b1011000101, 0b010101000101),
            (546, 0b1011000110, 0b010101000110),
            (547, 0b1011000111, 0b010101000111),
            (548, 0b1011001000, 0b010101001000),
            (549, 0b1011001001, 0b010101001001),
            (550, 0b1011010000, 0b010101010000),
            (551, 0b1011010001, 0b010101010001),
            (552, 0b1011010010, 0b010101010010),
            (553, 0b1011010011, 0b010101010011),
            (554, 0b1011010100, 0b010101010100),
            (555, 0b1011010101, 0b010101010101),
            (556, 0b1011010110, 0b010101010110),
            (557, 0b1011010111, 0b010101010111),
            (558, 0b1011011000, 0b010101011000),
            (559, 0b1011011001, 0b010101011001),
            (560, 0b1011100000, 0b010101100000),
            (561, 0b1011100001, 0b010101100001),
            (562, 0b1011100010, 0b010101100010),
            (563, 0b1011100011, 0b010101100011),
            (564, 0b1011100100, 0b010101100100),
            (565, 0b1011100101, 0b010101100101),
            (566, 0b1011100110, 0b010101100110),
            (567, 0b1011100111, 0b010101100111),
            (568, 0b1011101000, 0b010101101000),
            (569, 0b1011101001, 0b010101101001),
            (570, 0b1011110000, 0b010101110000),
            (571, 0b1011110001, 0b010101110001),
            (572, 0b1011110010, 0b010101110010),
            (573, 0b1011110011, 0b010101110011),
            (574, 0b1011110100, 0b010101110100),
            (575, 0b1011110101, 0b010101110101),
            (576, 0b1011110110, 0b010101110110),
            (577, 0b1011110111, 0b010101110111),
            (578, 0b1011111000, 0b010101111000),
            (579, 0b1011111001, 0b010101111001),
            (580, 0b1010001010, 0b010110000000),
            (581, 0b1010001011, 0b010110000001),
            (582, 0b1010101010, 0b010110000010),
            (583, 0b1010101011, 0b010110000011),
            (584, 0b1011001010, 0b010110000100),
            (585, 0b1011001011, 0b010110000101),
            (586, 0b1011101010, 0b010110000110),
            (587, 0b1011101011, 0b010110000111),
            (588, 0b1011001110, 0b010110001000),
            (589, 0b1011001111, 0b010110001001),
            (590, 0b1010011010, 0b010110010000),
            (591, 0b1010011011, 0b010110010001),
            (592, 0b1010111010, 0b010110010010),
            (593, 0b1010111011, 0b010110010011),
            (594, 0b1011011010, 0b010110010100),
            (595, 0b1011011011, 0b010110010101),
            (596, 0b1011111010, 0b010110010110),
            (597, 0b1011111011, 0b010110010111),
            (598, 0b1011011110, 0b010110011000),
            (599, 0b1011011111, 0b010110011001),
            (600, 0b1100000000, 0b011000000000),
            (601, 0b1100000001, 0b011000000001),
            (602, 0b1100000010, 0b011000000010),
            (603, 0b1100000011, 0b011000000011),
            (604, 0b1100000100, 0b011000000100),
            (605, 0b1100000101, 0b011000000101),
            (606, 0b1100000110, 0b011000000110),
            (607, 0b1100000111, 0b011000000111),
            (608, 0b1100001000, 0b011000001000),
            (609, 0b1100001001, 0b011000001001),
            (610, 0b1100010000, 0b011000010000),
            (611, 0b1100010001, 0b011000010001),
            (612, 0b1100010010, 0b011000010010),
            (613, 0b1100010011, 0b011000010011),
            (614, 0b1100010100, 0b011000010100),
            (615, 0b1100010101, 0b011000010101),
            (616, 0b1100010110, 0b011000010110),
            (617, 0b1100010111, 0b011000010111),
            (618, 0b1100011000, 0b011000011000),
            (619, 0b1100011001, 0b011000011001),
            (620, 0b1100100000, 0b011000100000),
            (621, 0b1100100001, 0b011000100001),
            (622, 0b1100100010, 0b011000100010),
            (623, 0b1100100011, 0b011000100011),
            (624, 0b1100100100, 0b011000100100),
            (625, 0b1100100101, 0b011000100101),
            (626, 0b1100100110, 0b011000100110),
            (627, 0b1100100111, 0b011000100111),
            (628, 0b1100101000, 0b011000101000),
            (629, 0b1100101001, 0b011000101001),
            (630, 0b1100110000, 0b011000110000),
            (631, 0b1100110001, 0b011000110001),
            (632, 0b1100110010, 0b011000110010),
            (633, 0b1100110011, 0b011000110011),
            (634, 0b1100110100, 0b011000110100),
            (635, 0b1100110101, 0b011000110101),
            (636, 0b1100110110, 0b011000110110),
            (637, 0b1100110111, 0b011000110111),
            (638, 0b1100111000, 0b011000111000),
            (639, 0b1100111001, 0b011000111001),
            (640, 0b1101000000, 0b011001000000),
            (641, 0b1101000001, 0b011001000001),
            (642, 0b1101000010, 0b011001000010),
            (643, 0b1101000011, 0b011001000011),
            (644, 0b1101000100, 0b011001000100),
            (645, 0b1101000101, 0b011001000101),
            (646, 0b1101000110, 0b011001000110),
            (647, 0b1101000111, 0b011001000111),
            (648, 0b1101001000, 0b011001001000),
            (649, 0b1101001001, 0b011001001001),
            (650, 0b1101010000, 0b011001010000),
            (651, 0b1101010001, 0b011001010001),
            (652, 0b1101010010, 0b011001010010),
            (653, 0b1101010011, 0b011001010011),
            (654, 0b1101010100, 0b011001010100),
            (655, 0b1101010101, 0b011001010101),
            (656, 0b1101010110, 0b011001010110),
            (657, 0b1101010111, 0b011001010111),
            (658, 0b1101011000, 0b011001011000),
            (659, 0b1101011001, 0b011001011001),
            (660, 0b1101100000, 0b011001100000),
            (661, 0b1101100001, 0b011001100001),
            (662, 0b1101100010, 0b011001100010),
            (663, 0b1101100011, 0b011001100011),
            (664, 0b1101100100, 0b011001100100),
            (665, 0b1101100101, 0b011001100101),
            (666, 0b1101100110, 0b011001100110),
            (667, 0b1101100111, 0b011001100111),
            (668, 0b1101101000, 0b011001101000),
            (669, 0b1101101001, 0b011001101001),
            (670, 0b1101110000, 0b011001110000),
            (671, 0b1101110001, 0b011001110001),
            (672, 0b1101110010, 0b011001110010),
            (673, 0b1101110011, 0b011001110011),
            (674, 0b1101110100, 0b011001110100),
            (675, 0b1101110101, 0b011001110101),
            (676, 0b1101110110, 0b011001110110),
            (677, 0b1101110111, 0b011001110111),
            (678, 0b1101111000, 0b011001111000),
            (679, 0b1101111001, 0b011001111001),
            (680, 0b1100001010, 0b011010000000),
            (681, 0b1100001011, 0b011010000001),
            (682, 0b1100101010, 0b011010000010),
            (683, 0b1100101011, 0b011010000011),
            (684, 0b1101001010, 0b011010000100),
            (685, 0b1101001011, 0b011010000101),
            (686, 0b1101101010, 0b011010000110),
            (687, 0b1101101011, 0b011010000111),
            (688, 0b1101001110, 0b011010001000),
            (689, 0b1101001111, 0b011010001001),
            (690, 0b1100011010, 0b011010010000),
            (691, 0b1100011011, 0b011010010001),
            (692, 0b1100111010, 0b011010010010),
            (693, 0b1100111011, 0b011010010011),
            (694, 0b1101011010, 0b011010010100),
            (695, 0b1101011011, 0b011010010101),
            (696, 0b1101111010, 0b011010010110),
            (697, 0b1101111011, 0b011010010111),
            (698, 0b1101011110, 0b011010011000),
            (699, 0b1101011111, 0b011010011001),
            (700, 0b1110000000, 0b011100000000),
            (701, 0b1110000001, 0b011100000001),
            (702, 0b1110000010, 0b011100000010),
            (703, 0b1110000011, 0b011100000011),
            (704, 0b1110000100, 0b011100000100),
            (705, 0b1110000101, 0b011100000101),
            (706, 0b1110000110, 0b011100000110),
            (707, 0b1110000111, 0b011100000111),
            (708, 0b1110001000, 0b011100001000),
            (709, 0b1110001001, 0b011100001001),
            (710, 0b1110010000, 0b011100010000),
            (711, 0b1110010001, 0b011100010001),
            (712, 0b1110010010, 0b011100010010),
            (713, 0b1110010011, 0b011100010011),
            (714, 0b1110010100, 0b011100010100),
            (715, 0b1110010101, 0b011100010101),
            (716, 0b1110010110, 0b011100010110),
            (717, 0b1110010111, 0b011100010111),
            (718, 0b1110011000, 0b011100011000),
            (719, 0b1110011001, 0b011100011001),
            (720, 0b1110100000, 0b011100100000),
            (721, 0b1110100001, 0b011100100001),
            (722, 0b1110100010, 0b011100100010),
            (723, 0b1110100011, 0b011100100011),
            (724, 0b1110100100, 0b011100100100),
            (725, 0b1110100101, 0b011100100101),
            (726, 0b1110100110, 0b011100100110),
            (727, 0b1110100111, 0b011100100111),
            (728, 0b1110101000, 0b011100101000),
            (729, 0b1110101001, 0b011100101001),
            (730, 0b1110110000, 0b011100110000),
            (731, 0b1110110001, 0b011100110001),
            (732, 0b1110110010, 0b011100110010),
            (733, 0b1110110011, 0b011100110011),
            (734, 0b1110110100, 0b011100110100),
            (735, 0b1110110101, 0b011100110101),
            (736, 0b1110110110, 0b011100110110),
            (737, 0b1110110111, 0b011100110111),
            (738, 0b1110111000, 0b011100111000),
            (739, 0b1110111001, 0b011100111001),
            (740, 0b1111000000, 0b011101000000),
            (741, 0b1111000001, 0b011101000001),
            (742, 0b1111000010, 0b011101000010),
            (743, 0b1111000011, 0b011101000011),
            (744, 0b1111000100, 0b011101000100),
            (745, 0b1111000101, 0b011101000101),
            (746, 0b1111000110, 0b011101000110),
            (747, 0b1111000111, 0b011101000111),
            (748, 0b1111001000, 0b011101001000),
            (749, 0b1111001001, 0b011101001001),
            (750, 0b1111010000, 0b011101010000),
            (751, 0b1111010001, 0b011101010001),
            (752, 0b1111010010, 0b011101010010),
            (753, 0b1111010011, 0b011101010011),
            (754, 0b1111010100, 0b011101010100),
            (755, 0b1111010101, 0b011101010101),
            (756, 0b1111010110, 0b011101010110),
            (757, 0b1111010111, 0b011101010111),
            (758, 0b1111011000, 0b011101011000),
            (759, 0b1111011001, 0b011101011001),
            (760, 0b1111100000, 0b011101100000),
            (761, 0b1111100001, 0b011101100001),
            (762, 0b1111100010, 0b011101100010),
            (763, 0b1111100011, 0b011101100011),
            (764, 0b1111100100, 0b011101100100),
            (765, 0b1111100101, 0b011101100101),
            (766, 0b1111100110, 0b011101100110),
            (767, 0b1111100111, 0b011101100111),
            (768, 0b1111101000, 0b011101101000),
            (769, 0b1111101001, 0b011101101001),
            (770, 0b1111110000, 0b011101110000),
            (771, 0b1111110001, 0b011101110001),
            (772, 0b1111110010, 0b011101110010),
            (773, 0b1111110011, 0b011101110011),
            (774, 0b1111110100, 0b011101110100),
            (775, 0b1111110101, 0b011101110101),
            (776, 0b1111110110, 0b011101110110),
            (777, 0b1111110111, 0b011101110111),
            (778, 0b1111111000, 0b011101111000),
            (779, 0b1111111001, 0b011101111001),
            (780, 0b1110001010, 0b011110000000),
            (781, 0b1110001011, 0b011110000001),
            (782, 0b1110101010, 0b011110000010),
            (783, 0b1110101011, 0b011110000011),
            (784, 0b1111001010, 0b011110000100),
            (785, 0b1111001011, 0b011110000101),
            (786, 0b1111101010, 0b011110000110),
            (787, 0b1111101011, 0b011110000111),
            (788, 0b1111001110, 0b011110001000),
            (789, 0b1111001111, 0b011110001001),
            (790, 0b1110011010, 0b011110010000),
            (791, 0b1110011011, 0b011110010001),
            (792, 0b1110111010, 0b011110010010),
            (793, 0b1110111011, 0b011110010011),
            (794, 0b1111011010, 0b011110010100),
            (795, 0b1111011011, 0b011110010101),
            (796, 0b1111111010, 0b011110010110),
            (797, 0b1111111011, 0b011110010111),
            (798, 0b1111011110, 0b011110011000),
            (799, 0b1111011111, 0b011110011001),
            (800, 0b0000001100, 0b100000000000),
            (801, 0b0000001101, 0b100000000001),
            (802, 0b0100001100, 0b100000000010),
            (803, 0b0100001101, 0b100000000011),
            (804, 0b1000001100, 0b100000000100),
            (805, 0b1000001101, 0b100000000101),
            (806, 0b1100001100, 0b100000000110),
            (807, 0b1100001101, 0b100000000111),
            (808, 0b0000101110, 0b100000001000),
            (809, 0b0000101111, 0b100000001001),
            (810, 0b0000011100, 0b100000010000),
            (811, 0b0000011101, 0b100000010001),
            (812, 0b0100011100, 0b100000010010),
            (813, 0b0100011101, 0b100000010011),
            (814, 0b1000011100, 0b100000010100),
            (815, 0b1000011101, 0b100000010101),
            (816, 0b1100011100, 0b100000010110),
            (817, 0b1100011101, 0b100000010111),
            (818, 0b0000111110, 0b100000011000),
            (819, 0b0000111111, 0b100000011001),
            (820, 0b0000101100, 0b100000100000),
            (821, 0b0000101101, 0b100000100001),
            (822, 0b0100101100, 0b100000100010),
            (823, 0b0100101101, 0b100000100011),
            (824, 0b1000101100, 0b100000100100),
            (825, 0b1000101101, 0b100000100101),
            (826, 0b1100101100, 0b100000100110),
            (827, 0b1100101101, 0b100000100111),
            (828, 0b0100101110, 0b100000101000),
            (829, 0b0100101111, 0b100000101001),
            (830, 0b0000111100, 0b100000110000),
            (831, 0b0000111101, 0b100000110001),
            (832, 0b0100111100, 0b100000110010),
            (833, 0b0100111101, 0b100000110011),
            (834, 0b1000111100, 0b100000110100),
            (835, 0b1000111101, 0b100000110101),
            (836, 0b1100111100, 0b100000110110),
            (837, 0b1100111101, 0b100000110111),
            (838, 0b0100111110, 0b100000111000),
            (839, 0b0100111111, 0b100000111001),
            (840, 0b0001001100, 0b100001000000),
            (841, 0b0001001101, 0b100001000001),
            (842, 0b0101001100, 0b100001000010),
            (843, 0b0101001101, 0b100001000011),
            (844, 0b1001001100, 0b100001000100),
            (845, 0b1001001101, 0b100001000101),
            (846, 0b1101001100, 0b100001000110),
            (847, 0b1101001101, 0b100001000111),
            (848, 0b1000101110, 0b100001001000),
            (849, 0b1000101111, 0b100001001001),
            (850, 0b0001011100, 0b100001010000),
            (851, 0b0001011101, 0b100001010001),
            (852, 0b0101011100, 0b100001010010),
            (853, 0b0101011101, 0b100001010011),
            (854, 0b1001011100, 0b100001010100),
            (855, 0b1001011101, 0b100001010101),
            (856, 0b1101011100, 0b100001010110),
            (857, 0b1101011101, 0b100001010111),
            (858, 0b1000111110, 0b100001011000),
            (859, 0b1000111111, 0b100001011001),
            (860, 0b0001101100, 0b100001100000),
            (861, 0b0001101101, 0b100001100001),
            (862, 0b0101101100, 0b100001100010),
            (863, 0b0101101101, 0b100001100011),
            (864, 0b1001101100, 0b100001100100),
            (865, 0b1001101101, 0b100001100101),
            (866, 0b1101101100, 0b100001100110),
            (867, 0b1101101101, 0b100001100111),
            (868, 0b1100101110, 0b100001101000),
            (869, 0b1100101111, 0b100001101001),
            (870, 0b0001111100, 0b100001110000),
            (871, 0b0001111101, 0b100001110001),
            (872, 0b0101111100, 0b100001110010),
            (873, 0b0101111101, 0b100001110011),
            (874, 0b1001111100, 0b100001110100),
            (875, 0b1001111101, 0b100001110101),
            (876, 0b1101111100, 0b100001110110),
            (877, 0b1101111101, 0b100001110111),
            (878, 0b1100111110, 0b100001111000),
            (879, 0b1100111111, 0b100001111001),
            (880, 0b0000001110, 0b100010000000),
            (881, 0b0000001111, 0b100010000001),
            (882, 0b0100001110, 0b100010000010),
            (883, 0b0100001111, 0b100010000011),
            (884, 0b1000001110, 0b100010000100),
            (885, 0b1000001111, 0b100010000101),
            (886, 0b1100001110, 0b100010000110),
            (887, 0b1100001111, 0b100010000111),
            (888, 0b0001101110, 0b100010001000),
            (889, 0b0001101111, 0b100010001001),
            (890, 0b0000011110, 0b100010010000),
            (891, 0b0000011111, 0b100010010001),
            (892, 0b0100011110, 0b100010010010),
            (893, 0b0100011111, 0b100010010011),
            (894, 0b1000011110, 0b100010010100),
            (895, 0b1000011111, 0b100010010101),
            (896, 0b1100011110, 0b100010010110),
            (897, 0b1100011111, 0b100010010111),
            (898, 0b0001111110, 0b100010011000),
            (899, 0b0001111111, 0b100010011001),
            (900, 0b0010001100, 0b100100000000),
            (901, 0b0010001101, 0b100100000001),
            (902, 0b0110001100, 0b100100000010),
            (903, 0b0110001101, 0b100100000011),
            (904, 0b1010001100, 0b100100000100),
            (905, 0b1010001101, 0b100100000101),
            (906, 0b1110001100, 0b100100000110),
            (907, 0b1110001101, 0b100100000111),
            (908, 0b0010101110, 0b100100001000),
            (909, 0b0010101111, 0b100100001001),
            (910, 0b0010011100, 0b100100010000),
            (911, 0b0010011101, 0b100100010001),
            (912, 0b0110011100, 0b100100010010),
            (913, 0b0110011101, 0b100100010011),
            (914, 0b1010011100, 0b100100010100),
            (915, 0b1010011101, 0b100100010101),
            (916, 0b1110011100, 0b100100010110),
            (917, 0b1110011101, 0b100100010111),
            (918, 0b0010111110, 0b100100011000),
            (919, 0b0010111111, 0b100100011001),
            (920, 0b0010101100, 0b100100100000),
            (921, 0b0010101101, 0b100100100001),
            (922, 0b0110101100, 0b100100100010),
            (923, 0b0110101101, 0b100100100011),
            (924, 0b1010101100, 0b100100100100),
            (925, 0b1010101101, 0b100100100101),
            (926, 0b1110101100, 0b100100100110),
            (927, 0b1110101101, 0b100100100111),
            (928, 0b0110101110, 0b100100101000),
            (929, 0b0110101111, 0b100100101001),
            (930, 0b0010111100, 0b100100110000),
            (931, 0b0010111101, 0b100100110001),
            (932, 0b0110111100, 0b100100110010),
            (933, 0b0110111101, 0b100100110011),
            (934, 0b1010111100, 0b100100110100),
            (935, 0b1010111101, 0b100100110101),
            (936, 0b1110111100, 0b100100110110),
            (937, 0b1110111101, 0b100100110111),
            (938, 0b0110111110, 0b100100111000),
            (939, 0b0110111111, 0b100100111001),
            (940, 0b0011001100, 0b100101000000),
            (941, 0b0011001101, 0b100101000001),
            (942, 0b0111001100, 0b100101000010),
            (943, 0b0111001101, 0b100101000011),
            (944, 0b1011001100, 0b100101000100),
            (945, 0b1011001101, 0b100101000101),
            (946, 0b1111001100, 0b100101000110),
            (947, 0b1111001101, 0b100101000111),
            (948, 0b1010101110, 0b100101001000),
            (949, 0b1010101111, 0b100101001001),
            (950, 0b0011011100, 0b100101010000),
            (951, 0b0011011101, 0b100101010001),
            (952, 0b0111011100, 0b100101010010),
            (953, 0b0111011101, 0b100101010011),
            (954, 0b1011011100, 0b100101010100),
            (955, 0b1011011101, 0b100101010101),
            (956, 0b1111011100, 0b100101010110),
            (957, 0b1111011101, 0b100101010111),
            (958, 0b1010111110, 0b100101011000),
            (959, 0b1010111111, 0b100101011001),
            (960, 0b0011101100, 0b100101100000),
            (961, 0b0011101101, 0b100101100001),
            (962, 0b0111101100, 0b100101100010),
            (963, 0b0111101101, 0b100101100011),
            (964, 0b1011101100, 0b100101100100),
            (965, 0b1011101101, 0b100101100101),
            (966, 0b1111101100, 0b100101100110),
            (967, 0b1111101101, 0b100101100111),
            (968, 0b1110101110, 0b100101101000),
            (969, 0b1110101111, 0b100101101001),
            (970, 0b0011111100, 0b100101110000),
            (971, 0b0011111101, 0b100101110001),
            (972, 0b0111111100, 0b100101110010),
            (973, 0b0111111101, 0b100101110011),
            (974, 0b1011111100, 0b100101110100),
            (975, 0b1011111101, 0b100101110101),
            (976, 0b1111111100, 0b100101110110),
            (977, 0b1111111101, 0b100101110111),
            (978, 0b1110111110, 0b100101111000),
            (979, 0b1110111111, 0b100101111001),
            (980, 0b0010001110, 0b100110000000),
            (981, 0b0010001111, 0b100110000001),
            (982, 0b0110001110, 0b100110000010),
            (983, 0b0110001111, 0b100110000011),
            (984, 0b1010001110, 0b100110000100),
            (985, 0b1010001111, 0b100110000101),
            (986, 0b1110001110, 0b100110000110),
            (987, 0b1110001111, 0b100110000111),
            (988, 0b0011101110, 0b100110001000),
            (989, 0b0011101111, 0b100110001001),
            (990, 0b0010011110, 0b100110010000),
            (991, 0b0010011111, 0b100110010001),
            (992, 0b0110011110, 0b100110010010),
            (993, 0b0110011111, 0b100110010011),
            (994, 0b1010011110, 0b100110010100),
            (995, 0b1010011111, 0b100110010101),
            (996, 0b1110011110, 0b100110010110),
            (997, 0b1110011111, 0b100110010111),
            (998, 0b0011111110, 0b100110011000),
            (999, 0b0011111111, 0b100110011001),
        ];
        for (i, (bin, dpd, bcd)) in tests.into_iter().enumerate() {
            assert_eq!(classify_bcd(bcd), classify_dpd(dpd), "#{i}");

            assert_eq!(bcd::from_u16(bin), bcd, "#{i}");

            let got = pack(bcd);
            assert_eq!(got, dpd, "#{i} ({bin}): {} != {}", Dpd(got), Dpd(dpd));

            let got = unpack(got);
            assert_eq!(got, bcd, "#{i} ({bin}): {} != {}", Bcd(got), Bcd(bcd));
        }
    }
}
